
/////////////////////////////////////////////
// *
// * Created by Christopher Aulepp
// * Date: 12 May 2008
// * contact information: cdaulepp@juno.com
// * VERSION 2.0
// * copyright 2008 Christopher Aulepp.  All rights reserved.
// *
//////////////////////////////////////////////


// *****************************************
//
//
//           	WARNING: ONLY AN
//				EXPERIENCED SCRIPTER SHOULD
//				CHANGE ANYTHING IN THIS FILE
//
//
// *****************************************


// *****************************************
//
//
//           	UPDATES
//
//
// *****************************************
// VERSION 1.2
// - 27 August 2007 - Added a miscellaneous custom item category to each 
//   function implementation to account for end-user custom items they 
//   want to add to the random loot generator


// *****************************************
//
//
//           		INCLUDE 
//
//			   DON'T CHANGE THIS
//
//
// *****************************************
// I need the racial loot probability tables.
#include "fw_inc_probability_tables_races"
// I need some constants from the prob_tables
#include "fw_inc_probability_tables_misc"

// I need the loot category constants.
#include "fw_inc_misc"

// *****************************************
//
//
//           FUNCTION DECLARATIONS
//
//			   DON'T CHANGE THIS
//
//
// *****************************************

////////////////////////////////////////////
// * Function that returns the loot category of item to be dropped.
// * returns a FW_MISC_*  or FW_ARMOR_* or FW_WEAPON_* constant.
//
int FW_Get_Racial_Loot_Category(object oTarget);

//////////////////////////////////////////
// * Function that weights the type of loot that drops to make exotic/rarer
// * types of loot drop less often. This is the default that is used only 
// * when the switch that allows racial specific loot drops is set to FALSE.   
//
int FW_Get_Default_Loot_Category ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Aberration ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Animal ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Beast ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Construct ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Dragon ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Dwarf ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Elemental ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Elf ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Fey ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Giant ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Gnome ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halfelf ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halfling ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halforc ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Human ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Goblinoid ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Monstrous ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Orc ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Reptilian ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Incorporeal ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Magical_Beast ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Ooze ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Outsider ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Shapechanger ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Undead ();

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Vermin ();


// *****************************************
//
//
//              IMPLEMENTATION
//
//			   DON'T CHANGE THIS
//
//
// *****************************************

////////////////////////////////////////////
// * Function that returns the loot category of item to be dropped.
// * returns a FW_MISC_*  or FW_ARMOR_* or FW_WEAPON_* constant.
//
int FW_Get_Racial_Loot_Category(object oTarget)
{
   int nRacialType = GetRacialType(oTarget);   
   int nLootType;
   switch (nRacialType)
   {
		case RACIAL_TYPE_ABERRATION: nLootType = FW_Race_Loot_Aberration();
			break;
		case RACIAL_TYPE_ANIMAL: nLootType =  FW_Race_Loot_Animal();
			break;
		case RACIAL_TYPE_BEAST: nLootType =  FW_Race_Loot_Beast();
			break;
		case RACIAL_TYPE_CONSTRUCT: nLootType = FW_Race_Loot_Construct();
			break;
		case RACIAL_TYPE_DRAGON: nLootType = FW_Race_Loot_Dragon();
			break;
		case RACIAL_TYPE_DWARF: nLootType = FW_Race_Loot_Dwarf();
			break;
		case RACIAL_TYPE_ELEMENTAL: nLootType = FW_Race_Loot_Elemental();
			break;
		case RACIAL_TYPE_ELF: nLootType = FW_Race_Loot_Elf();
			break;
		case RACIAL_TYPE_FEY: nLootType = FW_Race_Loot_Fey();
			break;
		case RACIAL_TYPE_GIANT: nLootType = FW_Race_Loot_Giant();
			break;
		case RACIAL_TYPE_GNOME: nLootType = FW_Race_Loot_Gnome();
			break;
		case RACIAL_TYPE_HALFELF: nLootType = FW_Race_Loot_Halfelf();
			break;
		case RACIAL_TYPE_HALFLING: nLootType = FW_Race_Loot_Halfling();
			break;
		case RACIAL_TYPE_HALFORC: nLootType = FW_Race_Loot_Halforc();
			break;
		case RACIAL_TYPE_HUMAN: nLootType = FW_Race_Loot_Human();
			break;
		case RACIAL_TYPE_HUMANOID_GOBLINOID: nLootType = FW_Race_Loot_Humanoid_Goblinoid();
			break;
		case RACIAL_TYPE_HUMANOID_MONSTROUS: nLootType = FW_Race_Loot_Humanoid_Monstrous();
			break;
		case RACIAL_TYPE_HUMANOID_ORC: nLootType = FW_Race_Loot_Humanoid_Orc();
			break;
		case RACIAL_TYPE_HUMANOID_REPTILIAN: nLootType = FW_Race_Loot_Humanoid_Reptilian();
			break;
		case RACIAL_TYPE_INCORPOREAL: nLootType = FW_Race_Loot_Incorporeal();
			break;
		case RACIAL_TYPE_MAGICAL_BEAST: nLootType =  FW_Race_Loot_Magical_Beast();
			break;
		case RACIAL_TYPE_OOZE: nLootType = FW_Race_Loot_Ooze();
			break;
		case RACIAL_TYPE_OUTSIDER: nLootType = FW_Race_Loot_Outsider();
			break;
		case RACIAL_TYPE_SHAPECHANGER: nLootType = FW_Race_Loot_Shapechanger();
			break;
		case RACIAL_TYPE_UNDEAD: nLootType = FW_Race_Loot_Undead();
			break;
		case RACIAL_TYPE_VERMIN: nLootType = FW_Race_Loot_Vermin();
			break;
		// Gold is always safe to give.
		default: nLootType = FW_MISC_GOLD;
			break;
   }   	
   return nLootType;
} // end of function.

//////////////////////////////////////////
// * Function that weights the type of loot that drops to make exotic/rarer
// * types of loot drop less often. This is the default that is used only 
// * when the switch that allows racial specific loot drops is set to FALSE.   
//
int FW_Get_Default_Loot_Category ()
{		
	int nTotalProbability = 
		FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT    + FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING + FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS     + FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER    + FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION + 
		FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL   + FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_DEFAULT_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED + FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +  FW_PROB_DEFAULT_TREAS_CAT_RECIPE +
		FW_PROB_DEFAULT_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
	
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;	
	
	else if (nRoll <=  (FW_PROB_DEFAULT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_POTION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_OTHER +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GEMS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DEFAULT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DEFAULT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DEFAULT_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_DEFAULT_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;	
		
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function


//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Aberration ()
{	
	int nTotalProbability = 
		FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT    + FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING + FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS     + FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER    + FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL   + FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_ABERRATION_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED + FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN + FW_PROB_ABERRATION_TREAS_CAT_RECIPE + 
		FW_PROB_ABERRATION_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
		
	else if (nRoll <=  (FW_PROB_ABERRATION_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_POTION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_OTHER +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GEMS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ABERRATION_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ABERRATION_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ABERRATION_TREAS_CAT_RECIPE +
						FW_PROB_ABERRATION_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_ABERRATION_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
		
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Animal ()
{	
	int nTotalProbability = 
		FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT    + FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING + FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS     + FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER    + FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION + 
		FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL   + FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_ANIMAL_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED + FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN + FW_PROB_ANIMAL_TREAS_CAT_RECIPE + 
        FW_PROB_ANIMAL_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
		
	else if (nRoll <=  (FW_PROB_ANIMAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ANIMAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ANIMAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ANIMAL_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_ANIMAL_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
		
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Beast ()
{	
	int nTotalProbability = 
		FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT    + FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING + FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_BEAST_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_BEAST_TREAS_CAT_MISC_GEMS     + FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
		FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_BEAST_TREAS_CAT_MISC_OTHER    + FW_PROB_BEAST_TREAS_CAT_MISC_POTION + 
		FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL   + FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_BEAST_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED + FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN + FW_PROB_BEAST_TREAS_CAT_RECIPE + 
        FW_PROB_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_BEAST_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
    			
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
    			
	else if (nRoll <=  (FW_PROB_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_BEAST_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
		
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Construct ()
{	
	int nTotalProbability = 
		FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT    + FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS     + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER    + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL   + FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED + FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN + FW_PROB_CONSTRUCT_TREAS_CAT_RECIPE + 
		FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_POTION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_OTHER +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GEMS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_CONSTRUCT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_CONSTRUCT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_CONSTRUCT_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_CONSTRUCT_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
				
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Dragon ()
{	
	int nTotalProbability = 
		FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT    + FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING + FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS     + FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER    + FW_PROB_DRAGON_TREAS_CAT_MISC_POTION + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL   + FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_DRAGON_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_DRAGON_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED + FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN + FW_PROB_DRAGON_TREAS_CAT_RECIPE + 
		FW_PROB_DRAGON_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_DRAGON_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DRAGON_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_POTION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DRAGON_TREAS_CAT_MISC_OTHER +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DRAGON_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GEMS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DRAGON_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DRAGON_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DRAGON_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DRAGON_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DRAGON_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DRAGON_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_DRAGON_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
				
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Dwarf ()
{	
	int nTotalProbability = 
		FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT    + FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING + FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_DWARF_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_DWARF_TREAS_CAT_MISC_GEMS     + FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
		FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_DWARF_TREAS_CAT_MISC_OTHER    + FW_PROB_DWARF_TREAS_CAT_MISC_POTION + 
		FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL   + FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_DWARF_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_DWARF_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED + FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN + FW_PROB_DWARF_TREAS_CAT_RECIPE + 
		FW_PROB_DWARF_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_DWARF_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DWARF_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_DWARF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_DWARF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_DWARF_TREAS_CAT_MISC_POTION +
						FW_PROB_DWARF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_DWARF_TREAS_CAT_MISC_OTHER +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_DWARF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_DWARF_TREAS_CAT_MISC_GEMS +
						FW_PROB_DWARF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_DWARF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_DWARF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_DWARF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_DWARF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_DWARF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_DWARF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_DWARF_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_DWARF_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
				
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Elemental ()
{	
	int nTotalProbability = 
		FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT    + FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS     + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER    + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL   + FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED + FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN + FW_PROB_ELEMENTAL_TREAS_CAT_RECIPE + 
		FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_POTION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELEMENTAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELEMENTAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ELEMENTAL_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_ELEMENTAL_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
				
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Elf ()
{	
	int nTotalProbability = 
		FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT    + FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_ELF_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING + FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_ELF_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_ELF_TREAS_CAT_MISC_GEMS     + FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
		FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_ELF_TREAS_CAT_MISC_OTHER    + FW_PROB_ELF_TREAS_CAT_MISC_POTION + 
		FW_PROB_ELF_TREAS_CAT_MISC_SCROLL   + FW_PROB_ELF_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_ELF_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_ELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED + FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN + FW_PROB_ELF_TREAS_CAT_RECIPE + 
		FW_PROB_ELF_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_ELF_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELF_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ELF_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_ELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_ELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_ELF_TREAS_CAT_MISC_POTION +
						FW_PROB_ELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_ELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_ELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_ELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_ELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_ELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_ELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_ELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_ELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_ELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_ELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_ELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_ELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_ELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_ELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_ELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_ELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_ELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_ELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_ELF_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_ELF_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
		
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Fey ()
{	
	int nTotalProbability = 
		FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT    + FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_FEY_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING + FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_FEY_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_FEY_TREAS_CAT_MISC_GEMS     + FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
		FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_FEY_TREAS_CAT_MISC_OTHER    + FW_PROB_FEY_TREAS_CAT_MISC_POTION + 
		FW_PROB_FEY_TREAS_CAT_MISC_SCROLL   + FW_PROB_FEY_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_FEY_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_FEY_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED + FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN + FW_PROB_FEY_TREAS_CAT_RECIPE +
		FW_PROB_FEY_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_FEY_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_FEY_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_FEY_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_FEY_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_FEY_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_FEY_TREAS_CAT_MISC_GOLD + 
						FW_PROB_FEY_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_FEY_TREAS_CAT_MISC_POTION +
						FW_PROB_FEY_TREAS_CAT_MISC_SCROLL +
						FW_PROB_FEY_TREAS_CAT_MISC_OTHER +
						FW_PROB_FEY_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_FEY_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_FEY_TREAS_CAT_MISC_BOOKS +
						FW_PROB_FEY_TREAS_CAT_MISC_GEMS +
						FW_PROB_FEY_TREAS_CAT_MISC_TRAPS +
						FW_PROB_FEY_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_FEY_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_FEY_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_FEY_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_FEY_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_FEY_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_FEY_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_FEY_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_FEY_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_FEY_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_FEY_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_FEY_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_FEY_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_FEY_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
				
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Giant ()
{	
	int nTotalProbability = 
		FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT    + FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING + FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_GIANT_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_GIANT_TREAS_CAT_MISC_GEMS     + FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
		FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_GIANT_TREAS_CAT_MISC_OTHER    + FW_PROB_GIANT_TREAS_CAT_MISC_POTION + 
		FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL   + FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_GIANT_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_GIANT_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED + FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN + FW_PROB_GIANT_TREAS_CAT_RECIPE +
		FW_PROB_GIANT_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_GIANT_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_GIANT_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_GIANT_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GIANT_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GIANT_TREAS_CAT_MISC_POTION +
						FW_PROB_GIANT_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GIANT_TREAS_CAT_MISC_OTHER +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GIANT_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GIANT_TREAS_CAT_MISC_GEMS +
						FW_PROB_GIANT_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GIANT_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GIANT_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GIANT_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GIANT_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GIANT_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GIANT_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_GIANT_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_GIANT_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Gnome ()
{	
	int nTotalProbability = 
		FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT    + FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING + FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_GNOME_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_GNOME_TREAS_CAT_MISC_GEMS     + FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
		FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_GNOME_TREAS_CAT_MISC_OTHER    + FW_PROB_GNOME_TREAS_CAT_MISC_POTION + 
		FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL   + FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_GNOME_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_GNOME_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED + FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN + FW_PROB_GNOME_TREAS_CAT_RECIPE +
		FW_PROB_GNOME_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_GNOME_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_GNOME_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_GNOME_TREAS_CAT_MISC_GOLD + 
						FW_PROB_GNOME_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_GNOME_TREAS_CAT_MISC_POTION +
						FW_PROB_GNOME_TREAS_CAT_MISC_SCROLL +
						FW_PROB_GNOME_TREAS_CAT_MISC_OTHER +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_GNOME_TREAS_CAT_MISC_BOOKS +
						FW_PROB_GNOME_TREAS_CAT_MISC_GEMS +
						FW_PROB_GNOME_TREAS_CAT_MISC_TRAPS +
						FW_PROB_GNOME_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_GNOME_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_GNOME_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_GNOME_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_GNOME_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_GNOME_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_GNOME_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_GNOME_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halfelf ()
{	
	int nTotalProbability = 
		FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING + FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS     + FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER    + FW_PROB_HALFELF_TREAS_CAT_MISC_POTION + 
		FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL   + FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HALFELF_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HALFELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED + FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN + FW_PROB_HALFELF_TREAS_CAT_RECIPE +
		FW_PROB_HALFELF_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HALFELF_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFELF_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFELF_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFELF_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFELF_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFELF_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFELF_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFELF_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFELF_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFELF_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HALFELF_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halfling ()
{	
	int nTotalProbability = 
		FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING + FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS     + FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER    + FW_PROB_HALFLING_TREAS_CAT_MISC_POTION + 
		FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL   + FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HALFLING_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HALFLING_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED + FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN + FW_PROB_HALFLING_TREAS_CAT_RECIPE +
		FW_PROB_HALFLING_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HALFLING_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFLING_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFLING_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFLING_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFLING_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFLING_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFLING_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFLING_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFLING_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFLING_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HALFLING_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Halforc ()
{	
	int nTotalProbability = 
		FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING + FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS     + FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER    + FW_PROB_HALFORC_TREAS_CAT_MISC_POTION + 
		FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL   + FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HALFORC_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HALFORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED + FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN + FW_PROB_HALFORC_TREAS_CAT_RECIPE +
		FW_PROB_HALFORC_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HALFORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HALFORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HALFORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HALFORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HALFORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HALFORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HALFORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HALFORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HALFORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HALFORC_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HALFORC_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Human ()
{	
	int nTotalProbability = 
		FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING + FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS     + FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER    + FW_PROB_HUMAN_TREAS_CAT_MISC_POTION + 
		FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL   + FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HUMAN_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HUMAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED + FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN + FW_PROB_HUMAN_TREAS_CAT_RECIPE +
		 FW_PROB_HUMAN_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HUMAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMAN_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HUMAN_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Goblinoid ()
{	
	int nTotalProbability = 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS     + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER    + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL   + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN + FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_RECIPE +
		FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HUMANOID_GOBLINOID_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Monstrous ()
{	
	int nTotalProbability = 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS     + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER    + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL   + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN + FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_RECIPE +
		FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HUMANOID_MONSTROUS_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Orc ()
{	
	int nTotalProbability = 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS     + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER    + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL   + FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED + FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN + FW_PROB_HUMANOID_ORC_TREAS_CAT_RECIPE +
		FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HUMANOID_ORC_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Humanoid_Reptilian ()
{	
	int nTotalProbability = 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT    + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS     + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER    + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL   + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN + FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_RECIPE +
		FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_POTION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_OTHER +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GEMS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_HUMANOID_REPTILIAN_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Incorporeal ()
{	
	int nTotalProbability = 
		FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT    + FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS     + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER    + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION + 
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL   + FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED + FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN + FW_PROB_INCORPOREAL_TREAS_CAT_RECIPE +
		FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GOLD + 
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_POTION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_SCROLL +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_OTHER +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_BOOKS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GEMS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_TRAPS +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_INCORPOREAL_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_INCORPOREAL_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_INCORPOREAL_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_INCORPOREAL_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Magical_Beast ()
{	
	int nTotalProbability = 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT    + FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS     + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER    + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL   + FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED + FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN + FW_PROB_MAGICAL_BEAST_TREAS_CAT_RECIPE +
		FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GOLD + 
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_POTION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_SCROLL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_OTHER +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_BOOKS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GEMS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_TRAPS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_MAGICAL_BEAST_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Ooze ()
{	
	int nTotalProbability = 
		FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT    + FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING + FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_OOZE_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_OOZE_TREAS_CAT_MISC_GEMS     + FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
		FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_OOZE_TREAS_CAT_MISC_OTHER    + FW_PROB_OOZE_TREAS_CAT_MISC_POTION + 
		FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL   + FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_OOZE_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_OOZE_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED + FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN + FW_PROB_OOZE_TREAS_CAT_RECIPE +
		FW_PROB_OOZE_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_OOZE_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_OOZE_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_OOZE_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OOZE_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OOZE_TREAS_CAT_MISC_POTION +
						FW_PROB_OOZE_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OOZE_TREAS_CAT_MISC_OTHER +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OOZE_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OOZE_TREAS_CAT_MISC_GEMS +
						FW_PROB_OOZE_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OOZE_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OOZE_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OOZE_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OOZE_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OOZE_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OOZE_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_OOZE_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_OOZE_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Outsider ()
{	
	int nTotalProbability = 
		FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT    + FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING + FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS     + FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER    + FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION + 
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL   + FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED + FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN + FW_PROB_OUTSIDER_TREAS_CAT_RECIPE +
		FW_PROB_OUTSIDER_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_OUTSIDER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_POTION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_OTHER +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GEMS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_OUTSIDER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_OUTSIDER_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_OUTSIDER_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_OUTSIDER_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Shapechanger ()
{	
	int nTotalProbability = 
		FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT    + FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS     + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER    + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL   + FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED + FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN + FW_PROB_SHAPECHANGER_TREAS_CAT_RECIPE +
		FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GOLD + 
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_POTION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_SCROLL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_OTHER +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_BOOKS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GEMS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_TRAPS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_SHAPECHANGER_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_SHAPECHANGER_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_SHAPECHANGER_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_SHAPECHANGER_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Undead ()
{	
	int nTotalProbability = 
		FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT    + FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING + FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS     + FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER    + FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION + 
		FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL   + FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_UNDEAD_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED + FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN + FW_PROB_UNDEAD_TREAS_CAT_RECIPE +
		FW_PROB_UNDEAD_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_UNDEAD_TREAS_CAT_MISC_GOLD + 
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_POTION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_SCROLL +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_OTHER +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_BOOKS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GEMS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_TRAPS +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_UNDEAD_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_UNDEAD_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_UNDEAD_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_UNDEAD_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function

//////////////////////////////////////////
// * Function that chooses race appropriate loot to drop.   
//
int FW_Race_Loot_Vermin ()
{	
	int nTotalProbability = 
		FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT    + FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING + 
		FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY   + FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
		FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT   + FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM + 
		FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS + FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING + FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_DAMAGE_SHIELD + FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS     + FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT + FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER    + FW_PROB_VERMIN_TREAS_CAT_MISC_POTION + 
		FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL   + FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS + 
		FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION + FW_PROB_VERMIN_TREAS_CAT_WEAPON_EXOTIC + 
		FW_PROB_VERMIN_TREAS_CAT_WEAPON_MAGE_SPECIFIC + FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL + 
		FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED + FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE + 
		FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN + FW_PROB_VERMIN_TREAS_CAT_RECIPE +
		FW_PROB_VERMIN_TREAS_CAT_MISC_CUSTOM_ITEM;  
		
	int nRoll = Random (nTotalProbability) + 1;
	
	if      (nRoll <=   FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD)
	
		return FW_MISC_GOLD;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL))
	
		return FW_MISC_CRAFTING_MATERIAL;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION))
	
		return FW_MISC_POTION;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL))
	
		return FW_MISC_SCROLL;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER))
	
		return FW_MISC_OTHER;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN))
	
		return FW_WEAPON_THROWN;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION))
	
		return FW_WEAPON_AMMUNITION;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS))
	
		return FW_MISC_BOOKS;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS))
	
		return FW_MISC_GEMS;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS))
	
		return FW_MISC_TRAPS;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT))
	
		return FW_MISC_HEAL_KIT;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING))
	
		return FW_ARMOR_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT))
	
		return FW_ARMOR_BOOT;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING ))
	
		return FW_MISC_CLOTHING;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY))
	
		return FW_MISC_JEWELRY;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT))
	
		return FW_ARMOR_LIGHT;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET))
	
		return FW_ARMOR_HELMET;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE))
	
		return FW_WEAPON_SIMPLE;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET))
	
		return FW_MISC_GAUNTLET;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM))
	
		return FW_ARMOR_MEDIUM;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS))
	
		return FW_ARMOR_SHIELDS;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL))
	
		return FW_WEAPON_MARTIAL;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED))
	
		return FW_WEAPON_RANGED;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY))
	
		return FW_ARMOR_HEAVY;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_EXOTIC))
	
		return FW_WEAPON_EXOTIC;
		
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MAGE_SPECIFIC))
						
		return FW_WEAPON_MAGE_SPECIFIC;
			
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CUSTOM_ITEM))
						
		return FW_MISC_CUSTOM_ITEM;
			
	else if (nRoll <=  (FW_PROB_VERMIN_TREAS_CAT_MISC_GOLD + 
						FW_PROB_VERMIN_TREAS_CAT_MISC_CRAFTING_MATERIAL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_POTION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_SCROLL +
						FW_PROB_VERMIN_TREAS_CAT_MISC_OTHER +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_THROWN +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_AMMUNITION +
						FW_PROB_VERMIN_TREAS_CAT_MISC_BOOKS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GEMS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_TRAPS +
						FW_PROB_VERMIN_TREAS_CAT_MISC_HEAL_KIT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_BOOT +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CLOTHING +
						FW_PROB_VERMIN_TREAS_CAT_MISC_JEWELRY +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_LIGHT +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HELMET +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_SIMPLE +
						FW_PROB_VERMIN_TREAS_CAT_MISC_GAUNTLET +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_MEDIUM +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_SHIELDS +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MARTIAL +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_RANGED +
						FW_PROB_VERMIN_TREAS_CAT_ARMOR_HEAVY +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_EXOTIC +
						FW_PROB_VERMIN_TREAS_CAT_WEAPON_MAGE_SPECIFIC +
						FW_PROB_VERMIN_TREAS_CAT_MISC_CUSTOM_ITEM +
						FW_PROB_VERMIN_TREAS_CAT_RECIPE))
						
		return FW_MISC_RECIPE;
			
	else // We rolled a damage shield, the rarest of all items.
	
		return FW_MISC_DAMAGE_SHIELD;
} // end of function



		